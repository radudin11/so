==13671== Memcheck, a memory error detector
==13671== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13671== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13671== Command: ./_test/run_test 6
==13671== Parent PID: 13670
==13671== 
==13671== Invalid read of size 1
==13671==    at 0x484B404: so_init (so_scheduler.c:8)
==13671==    by 0x10BB1F: test_sched_07 (test_sched.c:196)
==13671==    by 0x10962B: main (run_test.c:120)
==13671==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==13671== 
==13671== 
==13671== Process terminating with default action of signal 11 (SIGSEGV)
==13671==  Access not within mapped region at address 0x0
==13671==    at 0x484B404: so_init (so_scheduler.c:8)
==13671==    by 0x10BB1F: test_sched_07 (test_sched.c:196)
==13671==    by 0x10962B: main (run_test.c:120)
==13671==  If you believe this happened as a result of a stack
==13671==  overflow in your program's main thread (unlikely but
==13671==  possible), you can try to increase the size of the
==13671==  main thread stack using the --main-stacksize= flag.
==13671==  The main thread stack size used in this run was 4194304.
==13671== 
==13671== HEAP SUMMARY:
==13671==     in use at exit: 0 bytes in 0 blocks
==13671==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==13671== 
==13671== All heap blocks were freed -- no leaks are possible
==13671== 
==13671== For lists of detected and suppressed errors, rerun with: -s
==13671== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
